---
# yamllint disable rule:truthy
name: "Push on main"

on:
  push:
    branches:
      - stable
      - main
    paths-ignore:
      - 'docs/**'

permissions:
  contents: write

jobs:
  check_commit:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.decide.outputs.skip }}
      reason: ${{ steps.decide.outputs.reason }}
      next_version: ${{ steps.version.outputs.next-version }}
      previous_tag: ${{ steps.previoustag.outputs.tag }}
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GH_INFRAHUB_BOT_TOKEN }}
          fetch-depth: 0

      - id: commit_meta
        shell: bash
        run: |
          echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT

      # Your three steps, kept here:
      - name: Get previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate next version
        id: version
        uses: patrickjahns/version-drafter-action@v1.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Decide whether to skip downstream work:
      - id: decide
        shell: bash
        run: |
          set -euo pipefail
          skip=false
          reason=""

          author='${{ steps.commit_meta.outputs.author }}'
          msg='${{ steps.commit_meta.outputs.message }}'
          prev='${{ steps.previoustag.outputs.tag }}'
          next='${{ steps.version.outputs.next-version }}'

          # Skip on bot housekeeping commits
          if [[ "$author" == "opsmill-bot" ]] && [[ "$msg" =~ ^chore(:|\(release\):) ]]; then
            skip=true
            reason="bot-commit"
          fi

          # Skip when there is no new version to cut
          if [[ "$next" == "$prev" || -z "$next" ]]; then
            skip=true
            reason="${reason:+$reason,}no-new-version"
          fi

          echo "skip=$skip"   >> $GITHUB_OUTPUT
          echo "reason=$reason" >> $GITHUB_OUTPUT

  prepare_release:
    needs: check_commit
    if: needs.check_commit.outputs.skip == 'false'
    runs-on: ubuntu-22.04
    outputs:
      head_sha: ${{ steps.head.outputs.sha }}
      next_version: ${{ steps.expose.outputs.next_version }}
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GH_INFRAHUB_BOT_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.3
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Update pyproject.toml versions
        env:
          VERSION: ${{ needs.check_commit.outputs.next_version }}
        run: |
          echo "Updating to version $VERSION"
          poetry version "$VERSION"

      - name: Update lock file
        run: poetry lock

      - name: Commit version bump (skip CI)
        env:
          VERSION: ${{ needs.check_commit.outputs.next_version }}
        run: |
          git config user.name "opsmill-bot"
          git config user.email "github-bot@opsmill.com"
          git add pyproject.toml poetry.lock
          git commit -m "chore(release): v${VERSION} [skip ci]"
          git push origin HEAD:main

      - name: Get new HEAD of main after push
        id: head
        run: |
          git fetch origin main
          echo "sha=$(git rev-parse origin/main)" >> $GITHUB_OUTPUT

      - name: Expose next_version for downstream jobs
        id: expose
        run: echo "next_version=${{ needs.check_commit.outputs.next_version }}" >> "$GITHUB_OUTPUT"

  release:
    needs: ["prepare_release"]
    if: needs.prepare_release.result == 'success'
    uses: ./.github/workflows/workflow-release-drafter.yml
    with:
      version: ${{ needs.prepare_release.outputs.next_version }}
      target_sha: ${{ needs.prepare_release.outputs.head_sha }}
    secrets: inherit
