---
# yamllint disable rule:truthy rule:truthy rule:line-length
name: "Poetry check"
on:
  workflow_call:
    inputs:
      directory:
        type: "string"
        description: "Directory in which poetry check will be executed"
        default: "./"
jobs:
  files-changed:
    name: Detect which file has changed
    runs-on: "ubuntu-22.04"
    timeout-minutes: 5
    outputs:
      poetry_files: ${{ steps.changes.outputs.poetry_files }}
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: Check for file changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-filters.yml

  poetry_check:
    runs-on: "ubuntu-22.04"
    if: |
      needs.files-changed.outputs.poetry_files == 'true' ||
      github.ref_name == 'stable' ||
      github.ref_name == 'develop'
    needs: ["files-changed"]
    strategy:
      matrix:
        python-version:
          - "3.12"
        poetry-version:
          - "1.8.5"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v5"
        with:
          python-version: ${{ matrix.python-version }}
      - name: "Install Poetry ${{ matrix.poetry-version }}"
        uses: "snok/install-poetry@v1"
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: "Setup Python environment"
        run: |
          poetry config virtualenvs.create true --local
          poetry env use ${{ matrix.python-version }}
      - name: "Validate pyproject.toml and consistency with poetry.lock"
        run: |
          poetry check
        working-directory: ${{ github.event.inputs.directory }}
