# ---
# name: from-prometheus
# source:
#   name: prometheus
#   settings:
#     mode: api
#     url: "http://localhost:9090"
#     endpoint: "/api/v1/query"
#     promql:
#       resources:
#         libvirt_domain_merged: |
#           libvirt_domain_info * on(domain) group_left(state_desc) libvirt_domain_info_state

# destination:
#   name: infrahub
#   settings:
#     url: "http://localhost:8000"

# order: ["LibvirtDomain"]

# schema_mapping:
#   - name: LibvirtDomain
#     mapping: libvirt_domain_merged      # <-- resource name from settings.promql.resources
#     identifiers: ["domain"]
#     fields:
#       - name: domain
#         mapping: labels.domain
#       - name: os_type
#         mapping: labels.os_type
#       - name: os_type_arch
#         mapping: labels.os_type_arch
#       - name: os_type_machine
#         mapping: labels.os_type_machine
#       - name: present
#         mapping: value
#       - name: state_desc
#         mapping: labels.state_desc

---
name: from-prometheus
source:
  name: prometheus
  settings:
    mode: api
    url: "http://localhost:9090"
    endpoint: "/api/v1/query"
    promql:
      resources:
        dialer_established_rps: |
          sum by (dialer_name) (rate(net_conntrack_dialer_conn_established_total[5m]))
        dialer_closed_rps: |
          sum by (dialer_name) (rate(net_conntrack_dialer_conn_closed_total[5m]))
        dialer_failed_rps: |
          sum by (dialer_name) (rate(net_conntrack_dialer_conn_failed_total[5m]))
        dialer_success_rate: |
          sum by (dialer_name) (rate(net_conntrack_dialer_conn_established_total[5m]))
          /
          clamp_min(
            sum by (dialer_name) (
              rate(net_conntrack_dialer_conn_established_total[5m])
              + rate(net_conntrack_dialer_conn_failed_total[5m])
            ), 1e-12
          )

destination:
  name: infrahub
  settings:
    url: "http://localhost:8000"

order: ["MonitoringNetConntrackDialer"]

schema_mapping:
  - name: MonitoringNetConntrackDialer
    mapping: dialer_established_rps
    identifiers: ["dialer"]
    fields:
      - name: dialer
        mapping: labels.dialer_name

      # map INT versions (from transforms) into your integer attributes
      - name: established_rps
        mapping: established_rps_i
      - name: closed_rps
        mapping: closed_rps_i
      - name: status
        mapping: status

    transforms:
      # primary vector
      - field: established_rps_i
        expression: "{{ ((value or 0) * 60) | round(0, 'common') | int }}"

      # lookups â†’ per-minute
      - field: closed_rps_i
        expression: "{{ ((lookup('dialer_closed_rps', labels.dialer_name, 'value', 0) or 0) * 60) | round(0, 'common') | int }}"

      # status stays based on success_rate (0..1), no cast needed
      - field: status
        expression: >
          {{
            'healthy' if (lookup('dialer_success_rate', labels.dialer_name, 'value', 0) or 0) >= 0.99 else
            'warning' if (lookup('dialer_success_rate', labels.dialer_name, 'value', 0) or 0) >= 0.95 else
            'critical'
          }}